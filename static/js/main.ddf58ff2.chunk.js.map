{"version":3,"sources":["components/Footer.js","components/Header.js","data/names.js","components/MainGame.js","GlobalStyles.js","App.js","index.js"],"names":["Container","styled","footer","Link","a","Text","p","Footer","href","className","header","Title","Score","ScoreContainer","div","Header","score","bestScore","names","main","Card","Inner","Image","img","ImageContainer","Name","NameContainer","MainGame","setScore","setBestScore","useState","clickedChars","setClickedChars","opacity","setOpacity","waitingTrans","setWaitingTrans","useEffect","setTimeout","handleClick","target","clickedName","getAttribute","indexOf","newPeople","map","item","push","prev","style","numbersUsed","i","randNumber","generatedNum","Math","floor","random","generateRandNumber","onClick","name","src","alt","toUpperCase","slice","createCardsRandomly","GlobalStyles","createGlobalStyle","AppContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddf58ff2.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.footer`\n  width: 100%;\n  background-color: #152238;\n`\n\nconst Link = styled.a`\n  color: inherit;\n\n  &:hover {\n    color: #bbbbbb;\n  }\n\n  i {\n    padding-right: 5px;\n  }\n`\n\nconst Text = styled.p`\n  font-size: 25px;\n  user-select: none;\n  width: fit-content;\n  padding: 10px 0 15px 0;\n  margin: auto;\n  color: white;\n\n  @media (max-width: 400px) {\n    font-size: 20px;\n  }\n`\n\nexport default function Footer() {\n  return (\n    <Container>\n      <Text>\n        Webpage created by{' '}\n        <Link href=\"https://github.com/thiago-porto25\">\n          <i className=\"fab fa-github\"> </i>Thiago Porto\n        </Link>\n        .\n      </Text>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.header`\n  position: relative;\n  background-color: #dddddd;\n  height: fit-content;\n  min-height: 2rem;\n  width: 100%;\n  color: black;\n  display: flex;\n  color: #152238;\n\n  @media (max-width: 1010px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst Title = styled.p`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-left: 15px;\n  font-size: 50px;\n  font-weight: bolder;\n  text-align: center;\n\n  @media (max-width: 650px) {\n    font-size: 40px;\n  }\n`\n\nconst Score = styled.p`\n  font-size: 35px;\n  font-weight: bold;\n  padding-right: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  &:first-of-type {\n    padding-right: 40px;\n  }\n\n  @media (max-width: 500px) {\n    font-size: 30px;\n    padding-right: 0px;\n  }\n`\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  width: fit-content;\n  position: absolute;\n  top: 10px;\n  right: 0;\n\n  @media (max-width: 1010px) {\n    position: relative;\n  }\n`\n\nexport default function Header({ score, bestScore }) {\n  return (\n    <Container>\n      <Title>League of Legends Memory Game</Title>\n      <ScoreContainer>\n        <Score>Score: {score} </Score>\n        <Score>Best Score: {bestScore}</Score>\n      </ScoreContainer>\n    </Container>\n  )\n}\n","export const names = [\n  'viego',\n  'diana',\n  'leona',\n  'draven',\n  'ashe',\n  'mundo',\n  'syndra',\n  'mordekaiser',\n  'thresh',\n  'malphite',\n  'zed',\n  'ivern',\n  'kalista',\n  'lee sin',\n  'lucian',\n  'renekton',\n  'azir',\n  'tristana',\n]\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { names } from '../data/names'\n\nconst Container = styled.main`\n  background-color: #dddddd;\n`\n\nconst Card = styled.div`\n  background-color: #23395d;\n  border-radius: 5px;\n  height: 15rem;\n  min-height: 15rem;\n  width: 11rem;\n  min-width: 11rem;\n  padding-top: 20px;\n  transition: 150ms cubic-bezier(0.215, 0.61, 0.355, 1);\n  cursor: pointer;\n  animation: fadeIn 200ms;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @-webkit-keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n\nconst Inner = styled.div`\n  display: grid;\n  padding: 2rem 2rem 2rem 2rem;\n  grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr));\n  gap: 20px;\n  justify-items: center;\n`\n\nconst Image = styled.img`\n  height: 100%;\n`\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80%;\n  width: 100%;\n  pointer-events: none;\n`\n\nconst Name = styled.p`\n  margin-top: 5px;\n  font-size: 25px;\n  font-weight: bold;\n  color: white;\n`\n\nconst NameContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n`\n\nexport default function MainGame({ setScore, setBestScore, score, bestScore }) {\n  const [clickedChars, setClickedChars] = useState([])\n  const [opacity, setOpacity] = useState(1)\n  const [waitingTrans, setWaitingTrans] = useState(false)\n\n  useEffect(() => {\n    if (opacity === 0 && waitingTrans === true)\n      setTimeout(() => {\n        setWaitingTrans(false)\n        setOpacity(1)\n      }, 150)\n  }, [opacity, waitingTrans])\n\n  const handleClick = ({ target }) => {\n    setOpacity(0)\n    setWaitingTrans(true)\n    const clickedName = target.getAttribute('name')\n    if (clickedChars.indexOf(clickedName) === -1) {\n      const newPeople = clickedChars.map((item) => item)\n      newPeople.push(clickedName)\n      setScore((prev) => prev + 1)\n      setClickedChars(newPeople)\n    } else {\n      if (score > bestScore) setBestScore(score)\n      setScore(0)\n      setClickedChars([])\n    }\n  }\n\n  const createCardsRandomly = () => {\n    let numbersUsed = []\n    function generateRandNumber() {\n      while (true) {\n        let generatedNum = Math.floor(Math.random() * 18)\n        if (numbersUsed.indexOf(generatedNum) === -1) {\n          numbersUsed.push(generatedNum)\n          return generatedNum\n        } else continue\n      }\n    }\n    return names.map((item, i) => {\n      const randNumber = generateRandNumber()\n      return (\n        <Card\n          className=\"card\"\n          onClick={handleClick}\n          name={names[randNumber]}\n          key={`${item}-${i}`}\n          style={{ opacity: opacity }}\n        >\n          <ImageContainer>\n            <Image src={`./images/${randNumber}.jpg`} alt={names[randNumber]} />\n          </ImageContainer>\n          <NameContainer>\n            <Name>\n              {names[randNumber][0].toUpperCase() + names[randNumber].slice(1)}\n            </Name>\n          </NameContainer>\n        </Card>\n      )\n    })\n  }\n  return (\n    <Container>\n      <Inner style={{ opacity: !waitingTrans ? 1 : 0 }}>\n        {createCardsRandomly()}\n      </Inner>\n    </Container>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: 'VT323', monospace;\n}`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Footer, Header, MainGame } from './components'\nimport { GlobalStyles } from './GlobalStyles'\n\nconst AppContainer = styled.div``\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  const [bestScore, setBestScore] = useState(0)\n\n  return (\n    <>\n      <GlobalStyles />\n      <AppContainer>\n        <Header score={score} bestScore={bestScore} />\n        <MainGame\n          setScore={setScore}\n          setBestScore={setBestScore}\n          score={score}\n          bestScore={bestScore}\n        />\n        <Footer />\n      </AppContainer>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}